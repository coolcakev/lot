// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using lotforussr;

namespace lotforussr.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20210714112956_new12")]
    partial class new12
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "6.0.0-preview.5.21301.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("lotforussr.Models.History", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("bid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Histories");

                    b.HasDiscriminator<string>("Discriminator").HasValue("History");
                });

            modelBuilder.Entity("lotforussr.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("balance")
                        .HasColumnType("int");

                    b.Property<bool>("isreg")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("lotforussr.Models.lot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Finalprice")
                        .HasColumnType("int");

                    b.Property<int>("Initialprice")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<bool>("isbid")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Lots");
                });

            modelBuilder.Entity("lotforussr.Models.Historyforlot", b =>
                {
                    b.HasBaseType("lotforussr.Models.History");

                    b.Property<string>("bidusername")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("lotId")
                        .HasColumnType("int");

                    b.HasIndex("lotId");

                    b.HasDiscriminator().HasValue("Historyforlot");
                });

            modelBuilder.Entity("lotforussr.Models.Historyforuser", b =>
                {
                    b.HasBaseType("lotforussr.Models.History");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("bidlot")
                        .HasColumnType("nvarchar(max)");

                    b.HasIndex("UserId");

                    b.HasDiscriminator().HasValue("Historyforuser");
                });

            modelBuilder.Entity("lotforussr.Models.lot", b =>
                {
                    b.HasOne("lotforussr.Models.User", "User")
                        .WithMany("Lots")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("lotforussr.Models.Historyforlot", b =>
                {
                    b.HasOne("lotforussr.Models.lot", null)
                        .WithMany("History")
                        .HasForeignKey("lotId");
                });

            modelBuilder.Entity("lotforussr.Models.Historyforuser", b =>
                {
                    b.HasOne("lotforussr.Models.User", null)
                        .WithMany("Histories")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("lotforussr.Models.User", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("Lots");
                });

            modelBuilder.Entity("lotforussr.Models.lot", b =>
                {
                    b.Navigation("History");
                });
#pragma warning restore 612, 618
        }
    }
}
